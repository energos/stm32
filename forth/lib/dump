\ Hey Emacs, this is a Forth file -*- mode: Forth; comment-column: 40; -*-

\ dump ( address n )
\ hexadecimal dump

: base-execute base @ >r base ! execute r> base ! ;

: n2. 0 <# # # #> type ;
: n8. 0 <# # # # # # # # # #> type ;

: range? ( n min max -- flag )
    #2 pick < rot rot < or not ;

\ is char a printable ascii?
: ascii? ( char -- flag )
    bl [char] ~ range? ;

\ print char if printable, else print a dot
: emit_if_ascii dup ascii? if else drop [char] . then emit ;

: dumpchars ( address n linecounter )
    dup #16 swap - dup 2* + #2 + spaces ( address n linecounter )
    rot over - swap                     ( n address-linecounter linecounter )
    begin
        dup 0<>
    while                               ( n address linecounter )
            \ address increments while linecounter decrements to zero
            swap dup c@ emit_if_ascii 1+ swap
            1-
    repeat
    rot swap                            ( address n linecounter )
;

: dump ( address n )
    0                                   ( address n linecounter )
    begin
        over 0<>
    while
            swap 1- swap
            dup 0= if
                \ linecounter==0, print CR and address
                cr #2 pick n8. [char] : emit space space then
            \ print byte and SPACE, increment address
            rot dup c@ n2. space 1+ rot rot
            1+
            \ linecounter==16, print asciis and zero linecounter
            dup #16 = if dumpchars then
    repeat
    dumpchars
    drop drop drop cr
;

: dump ['] dump #16 base-execute ;
